{"version":3,"sources":["components/Buttons.js","components/header.js","components/Task.js","components/tasks.js","components/AddTask.js","components/footer.js","components/about.js","App.js","reportWebVitals.js","index.js"],"names":["Buttons","color","text","onClick","style","backgroundColor","className","Header","title","onAdd","showAdd","defaultProps","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","Footer","href","About","App","showaddform","setshowaddform","setTasks","useEffect","a","fetchTasks","tasksfromserver","gettasks","fetch","res","json","data","console","log","Addtask","method","headers","body","JSON","stringify","response","Deletetask","filter","ToggleReminder","path","exact","render","props","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18728a09.chunk.js","sourcesContent":["const Buttons = ({color,text,onClick}) => {\nreturn( \n<button \n    style={{backgroundColor:color}} \n    className=\"btn\"\n    onClick = {onClick}\n    >\n        \n    {text}\n\n\n</button>\n)\n}\n\nexport default Buttons\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Buttons from './Buttons'\n\nconst Header = ({title,onAdd,showAdd}) => {\n    \n    return (\n        <header className=\"header\">\n            <h1>{title}</h1>\n            <Buttons color={showAdd ? 'Red' : 'Green'} text={showAdd ? 'Hide' : 'Add'} onClick={onAdd} />\n            \n        </header>\n    )\n}\n\nHeader.defaultProps = { \n    title:'task tracker',\n}\n\nHeader.propTypes = {\n    title:PropTypes.string,\n    color:PropTypes.string,\n    text:PropTypes.string,\n    \n}\n\nexport default Header\n","import React from 'react'\nimport { FaTimes } from 'react-icons/fa'\nimport Buttons from './Buttons'\n\n\nfunction Task  ({task,onDelete,onToggle})  {\n    return (\n        <div className={`task ${task.reminder ? 'reminder' : ''}` } onDoubleClick={() => onToggle(task.id)}>\n            <h3>{task.text}  <Buttons text='Delete' color='red' onClick={ ( )=> onDelete(task.id)}/>  </h3>\n            <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import React from 'react'\nimport Task from './Task'\n\nfunction Tasks( {tasks,onDelete,onToggle} ){\n    return (\n        <>\n          {tasks.map((task) => (\n              <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle}/>\n          ))}\n\n        </>\n        \n    )\n}\n\nexport default Tasks\n","import {useState} from 'react'\n\nfunction AddTask({ onAdd }){\n    const [text,setText] = useState('')\n    const [day,setDay] = useState('')\n    const[reminder,setReminder] = useState(false)\n\n    function onSubmit(e){\n        e.preventDefault()\n\n        if (!text){\n            alert(\"Please add a task\");\n        }\n\n        \n\n        onAdd({text,day,reminder})\n        setText('')\n        setDay('')\n        setReminder(false)\n\n    }\n\n    return (\n        <form className='add-form' onSubmit={onSubmit }>\n            <div className='form-control'>\n                <label>Task</label>\n                <input type='text' placeholder='Add task' value={text} onChange={(e) => setText(e.target.value)}/>\n            </div>\n\n            <div className='form-control'>\n                <label>Day/Time</label>\n                <input type='text' placeholder='Add Day/Time' value={day} onChange={(e)=> setDay(e.target.value)}/>\n            </div>\n\n            <div className='form-control form-control-check'>\n                <label>Set Reminder</label>\n                <input type='checkbox' checked={reminder} value={reminder} onChange={(e)=> setReminder(e.target.value)} />\n\n            </div>\n\n            <input type='submit' value='Save Task' className='btn btn-block'/>\n        </form>\n    )\n}\n\nexport default AddTask\n","const Footer = () => {\n    return (\n        <footer>\n            <p>Copyright &copy 2021</p>\n            <a href=\"/about\">About</a>\n            \n        </footer>\n    )\n}\n\nexport default Footer\n"," const About = () => {\n    return (\n        <div>\n            <h4>Version 1.0.0</h4>\n            <a href=\"/\">Go back</a>\n        </div>\n    )\n}\n\nexport default About\n","import Header from  './components/header'\nimport {useState,useEffect} from 'react'\nimport {BrowserRouter as Router,Route} from 'react-router-dom'\nimport Tasks from './components/tasks.js'\nimport AddTask from './components/AddTask.js'\nimport Footer from './components/footer.js'\nimport About from './components/about.js'\n\nfunction App() {\n  const [showaddform,setshowaddform] = useState(true)\n\n  const [tasks,setTasks] = useState([])\n\n  useEffect(() => {\n    const gettasks = async () => {\n      const tasksfromserver = await fetchTasks()\n      setTasks(tasksfromserver)\n    }\n    \n\n    gettasks()\n   \n     \n  },[])\n\n  const fetchTasks = async () => {\n\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n    console.log(data)\n\n    return data\n  }\n\n\n\n const  Addtask = async(task) => {\n   const response = await fetch('http://localhost:5000/tasks',{\n     method:'POST',\n     headers:{\n      'Content-type':'application/json',\n    },\n     body:JSON.stringify(task),\n   })\n\n   const data = await response.json()\n\n   setTasks([...tasks,data])\n\n  // const id = Math.floor(Math.random() * 10000) + 1\n  // const newTask = {id, ...task}\n  // setTasks([...tasks,newTask])\n\n}\n\nconst  Deletetask = async(id)=> {\n    await fetch(`http://localhost:5000/tasks/${id}`,{method:'Delete'})\n\n  \n  setTasks(tasks.filter((task) => task.id !==id));\n}\n\n\nfunction ToggleReminder(id){\n   setTasks(tasks.map((task) => task.id === id ? {...task,reminder:!task.reminder} : task))\n}\n\n\n\nreturn (\n  <Router>\n    <div className=\"container \">\n      \n      <Header title='Task Tracer' onAdd={() => setshowaddform(!showaddform)} showAdd={showaddform}/>\n      <Route path='/' exact render = {(props) => (\n        <>\n        {showaddform && <AddTask onAdd={Addtask} />}\n        <Tasks tasks={tasks} onDelete={Deletetask} onToggle={ToggleReminder}/>\n          \n        </>\n      )} />\n      \n      <Route path='/about' component={About}/>\n      <Footer/>\n    </div>\n    </Router>\n  )\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}